Test the matrix_divided function.

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Basic test
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test with float divisors
>>> matrix_divided(matrix, 2.5)
[[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

# Test with mismatched row sizes
>>> matrix = [[1, 2, 3], [4, 5]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

# Test with non-integer/float in matrix
>>> matrix = [[1, 2, "three"], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test with zero divisor
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

# Test with non-number divisor
>>> matrix_divided(matrix, "two")
Traceback (most recent call last):
...
TypeError: div must be a number
